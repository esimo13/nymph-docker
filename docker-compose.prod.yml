version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-resume_parser}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - nymph-network
    restart: unless-stopped

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-resume_parser}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VLM_API_KEY=${VLM_API_KEY}
      - VLMRUN_API_KEY=${VLMRUN_API_KEY}
      - VLM_API_URL=${VLM_API_URL:-https://api.vlm.run/v1/chat/completions}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - nymph-network
    restart: unless-stopped

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=${FRONTEND_API_URL}
      - INTERNAL_API_URL=http://backend:8002
    depends_on:
      - backend
    networks:
      - nymph-network
    restart: unless-stopped

networks:
  nymph-network:
    driver: bridge

volumes:
  postgres_data:
